CREATE OR REPLACE PROCEDURE RECORD_JOB_LOG
(
    vROW_NUM     IN NUMBER   := NULL
  , vSTATUS      IN VARCHAR2 := NULL
  , vSTEP        IN VARCHAR2 := NULL
  , vERR_CD      IN VARCHAR2 := NULL
  , vERR_MSG     IN VARCHAR2 := NULL
)
IS
BEGIN
    IF vROW_NUM IS NULL THEN 
        RAISE_APPLICATION_ERROR(-20001, 'CHECK ARGUMENT. NULL TO ROW_NUM');
    END IF;        
    IF vSTATUS IS NULL THEN 
        RAISE_APPLICATION_ERROR(-20002, 'CHECK ARGUMENT. NULL TO STATUS');
    END IF;
    IF vSTEP IS NULL THEN 
        RAISE_APPLICATION_ERROR(-20003, 'CHECK ARGUMENT. NULL TO STEP');
    END IF;

    CASE vSTATUS
    WHEN 'START' THEN
        INSERT INTO TBL_PRTC_LOG(ROW_NUM, STATUS, STEP, ST_TIME, UP_TIME, FN_TIME, ER_TIME, ERR_CD, ERR_MSG)
               VALUES (vROW_NUM, 'START', vSTEP, SYSTIMESTAMP, NULL, NULL, NULL, NULL, NULL);
    WHEN 'UPDATE' THEN
        UPDATE TBL_PRTC_LOG L
           SET L.STATUS = 'UPDATE'
             , L.STEP = vSTEP
             , L.UP_TIME = SYSTIMESTAMP
         WHERE L.ROW_NUM = vROW_NUM;
    WHEN 'FINISH' THEN
        UPDATE TBL_PRTC_LOG L
           SET L.STATUS = 'FINISH'
             , L.STEP = vSTEP
             , L.FN_TIME = SYSTIMESTAMP
         WHERE L.ROW_NUM = vROW_NUM;
    WHEN 'ERROR' THEN
        UPDATE TBL_PRTC_LOG L
           SET L.STATUS = 'ERROR'
             , L.STEP = vSTEP
             , L.ER_TIME = SYSTIMESTAMP
             , L.ERR_CD = vERR_CD
             , L.ERR_MSG = vERR_MSG
         WHERE L.ROW_NUM = vROW_NUM;         
    END CASE;
    
    COMMIT;

END;
/