CREATE OR REPLACE PROCEDURE RECORD_JOB_LOG
(
    vSTATUS      IN VARCHAR2 := NULL
  , vSTEP        IN VARCHAR2 := NULL
  , vERR_CD      IN VARCHAR2 := NULL
  , vERR_MSG     IN VARCHAR2 := NULL
)
IS
BEGIN
    IF vSTATUS IS NULL THEN 
        RAISE_APPLICATION_ERROR(-20001, 'CHECK ARGUMENT. NULL TO STATUS');
    END IF;
    IF vSTEP IS NULL THEN 
        RAISE_APPLICATION_ERROR(-20002, 'CHECK ARGUMENT. NULL TO STEP');
    END IF;

    CASE STATUS
    WHEN 'START' THEN
        INSERT INTO TBL_PRTC_LOG(STATUS, STEP, ST_TIME, UP_TIME, FN_TIME, ER_TIME, ERR_CD, ERR_MSG)
               VALUES ('START', vSTEP, SYSDATE, NULL, NULL, NULL, NULL, NULL);
    WHEN 'UPDATE' THEN
        INSERT INTO TBL_PRTC_LOG(STATUS, STEP, ST_TIME, UP_TIME, FN_TIME, ER_TIME, ERR_CD, ERR_MSG)
               VALUES ('UPDATE', vSTEP, NULL, SYSDATE, NULL, NULL, NULL, NULL);
    WHEN 'FINISH' THEN
        INSERT INTO TBL_PRTC_LOG(STATUS, STEP, ST_TIME, UP_TIME, FN_TIME, ER_TIME, ERR_CD, ERR_MSG)
               VALUES ('FINISH', vSTEP, NULL, NULL, SYSDATE, NULL, NULL, NULL);
    END CASE;
    
    COMMIT;
    
    EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        INSERT INTO TBL_PRTC_LOG(STATUS, STEP, ST_TIME, UP_TIME, FN_TIME, ER_TIME, ERR_CD, ERR_MSG)
                   VALUES ('ERROR', vSTEP, NULL, NULL, NULL, SYSDATE, SQLCODE, SUBSTR(SQLERRM(SQLCODE), 12));
                   
        COMMIT;
        RAISE_APPLICATION_ERROR(-20999, SUBSTR(SQLERRM(SQLCODE), 12));

END;
/